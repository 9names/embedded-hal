[package]
authors = [
  "The Embedded HAL Team and Contributors <embedded-hal@teams.rust-embedded.org>",
]
categories = ["embedded", "hardware-support", "no-std"]
description = "Bus/Device connection mechanisms for embedded-hal, a Hardware Abstraction Layer (HAL) for embedded systems"
documentation = "https://docs.rs/embedded-hal-bus"
edition = "2021"
rust-version = "1.60"
keywords = ["hal", "IO"]
license = "MIT OR Apache-2.0"
name = "embedded-hal-bus"
readme = "README.md"
repository = "https://github.com/rust-embedded/embedded-hal"
version = "0.2.0"

[features]
# Enable shared bus implementations using `std::sync::Mutex`, and implement `std::error::Error` for `DeviceError`
std = []
# Enable shared bus implementations that require Atomic CAS operations
atomic-device = []
# Enable `embedded-hal-async` support.
async = ["dep:embedded-hal-async"]
# Derive `defmt::Format` from `defmt` 0.3 for enums and structs. See https://github.com/knurling-rs/defmt for more info
defmt-03 = ["dep:defmt-03", "embedded-hal/defmt-03", "embedded-hal-async?/defmt-03"]
# Enable critical-section feature in portable-atomic.
#
# `portable-atomic` emulates atomic CAS functionality, allowing `embedded-hal-bus` to use `atomic-device` on hardware that does not natively support atomic CAS.
# This feature requires a critical-section implementation, which is most often provided by your arch crate (cortex-m / riscv / msp430 / avr-device / etc) when the `critical-section-single-core` feature is enabled.
# A list of critical-section impls is available [in the critical section docs](https://github.com/rust-embedded/critical-section?tab=readme-ov-file#usage-in-no-std-binaries)
portable-atomic-critical-section = ["atomic-device", "portable-atomic/critical-section"]
# Enable unsafe-assume-single-core feature of portable-atomic.
# 
# `portable-atomic` emulates atomic CAS functionality, allowing `embedded-hal-bus` to use `atomic-device` on hardware that does not natively support atomic CAS.
#  This feature is only safe on single core systems
portable-atomic-unsafe-assume-single-core = ["atomic-device", "portable-atomic/unsafe-assume-single-core"]

[dependencies]
embedded-hal = { version = "1.0.0", path = "../embedded-hal" }
embedded-hal-async = { version = "1.0.0", path = "../embedded-hal-async", optional = true }
critical-section = { version = "1.0" }
defmt-03 = { package = "defmt", version = "0.3", optional = true }
portable-atomic = {version = "1", default-features = false}

[package.metadata.docs.rs]
features = ["std", "async", "atomic-device"]
rustdoc-args = ["--cfg", "docsrs"]
